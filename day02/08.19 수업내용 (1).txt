08.19 수업내용

내일 폴더 외부로 가져가는 방법(import, export), 디버깅 등 알려줌

소스코드 Exam09.java 부터 시작 → 삼항 연산자부터
Exam09.java 파일은 ch01.dataType 패키지 안에 만들기

src > 폴더 아래 ch01.dataType처럼 package 만들기 → ch02.control
Exam10.java~ 파일부터 ch02.control 패키지 안에 만들기

<연산자 내용>
순차(콤마) 연산자는 사용 권장x -> 하나씩 선언 추천

(비추천)
int x = 10, int y = 20, int z = 30;

(추천 방식) -> 나중에 코드가 길어지면 순차 연산자를 사용할 경우 함수, 변수 등 찾기가 어려워짐
int x = 10; 
int y = 20; 
int z = 30;


문자열이 포함되어 있으면 문자열로 계산됨
예)
문자열 + 정수형 -> 문자열
문자열 + 정수형 + 문자열 + 정수형 -> 문자열
정수형 + 정수형 -> 정수형
	=> 10 + 20 -> 30  
	=> (덧셈 연산 말고 1020으로 출력하도록 하려면?)
	=> 정수형 사이에 빈 문자열 넣기 ("")
	=> System.out.println(10+ " " + 20);

근데 문자열 + 정수형의 연산 결과는 문자열로 출력되는데 
"결과" + 10 + 20 일 경우 출력은 결과1020으로 출력되는데
결과30으로 출력하려면 연산자 우선순위로 해결하면 됨!
-> "결과"+ (10 + 20) 이렇게하면 됨

*삼항연산자는 if문으로 대체되긴 하는데 실무에서는 삼항연산자를 많이 사용함!
- (공식) 조건 ? 참 : 거짓
- 삼항연산자의 조건은 참만 있으면 안됨!
- 참, 거짓 조건이 모두 있어야 함!

*switch~case문
-> 실수형, 관계/논리 연산자 안됨
-> 위의 사항이 안되기 때문에 if문과 다르게 한계가 있음
-> if문처럼 조건문을 스스로 못빠져나오기 때문에 break를 사용해야 해당 case문의 명령문만 실행됨

** 문제 풀기
src 폴더 안에 해당 챕터 퀴즈 만들어서 안에 코드 작성
오늘 ch02 이니까 
-> ch02.quiz 패키지로 생성
-> 코드 풀어야 하는 문제는 Quiz15 이런 식으로 문제 번호 적어서 클래스 생성하기

디버깅
-> 에러는 발생하지 않지만 결과가 이상하게 나올 때 유용함
-> 코드의 흐름을 알 수 있음

